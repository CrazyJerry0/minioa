<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
      "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
      "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="true" package="org.minioa.core">
    <sql-query name="core.task.insert.record">
    <![CDATA[
        insert into core_task(CID_,CDATE_,processId, taskDefId, startDate, taskStatus, note, uuid) values(:cId,sysdate(),:processId, :taskDefId, sysdate(), 'running', :note, :uuid)
    ]]>
    </sql-query>
    <sql-query name="core.task.select.records">
    <![CDATA[
				select task.ID_,task.CID_,task.CDATE_,task.MID_,task.MDATE_,task.processId, task.taskDefId, task.startDate, task.endDate, task.taskStatus, task.note, task.uuid, 
					taskDef.taskName,taskDef.taskApproveType,taskDef.taskApprover,taskDef.taskNextStep,
  				date_add(task.startDate,interval taskdef.taskDuation day) as duDate,u.displayName,process.CID_ as applicationId
				from core_task task
				left join core_processdefinition_task taskdef on taskDef.ID_ = task.taskDefId
				left join core_user u on u.ID_ = task.MID_
				left join core_process process on process.ID_ = task.processId
				where task.processId = :processId
				order by task.ID_
    ]]>
    </sql-query>
    <sql-query name="core.task.select.records.running">
    <![CDATA[
				select task.ID_,task.CID_,task.CDATE_,task.MID_,task.MDATE_,task.processId, task.taskDefId, task.startDate, task.endDate, task.taskStatus, task.note, task.uuid, 
					taskDef.taskName,taskDef.taskApproveType,taskDef.taskApprover,taskDef.taskNextStep,
  				date_add(task.startDate,interval taskdef.taskDuation day) as duDate,u.displayName,
  				process.processDesc,process.instanceId,process.processDefId,process.tableName,process.CID_ as applicationId
				from core_task task
				left join core_processdefinition_task taskdef on taskDef.ID_ = task.taskDefId
				left join core_process process on process.ID_ = task.processId
				left join core_user u on u.ID_ = task.MID_
    ]]>
    </sql-query>
    <sql-query name="core.task.select.record.where.id">
    <![CDATA[
        select task.ID_,task.CID_,task.CDATE_,task.MID_,task.MDATE_,task.processId, task.taskDefId, task.startDate, task.endDate, task.taskStatus, task.note, task.uuid
        from core_task task
        where task.ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.task.select.record.where.uuid">
    <![CDATA[
        select task.ID_,task.CID_,task.CDATE_,task.MID_,task.MDATE_,task.processId, task.taskDefId, task.startDate, task.endDate, task.taskStatus, task.note, task.uuid
        from core_task task
        where task.uuid = :uuid
    ]]>
    </sql-query>
    <sql-query name="core.task.complete.where.uuid">
    <![CDATA[
        update core_task set MID_ = :mId, MDATE_ = sysdate(), endDate = sysdate(), taskStatus = :taskStatus, note = :note
        where uuid = :uuid
    ]]>
    </sql-query>
    <sql-query name="core.task.update.record.note.where.id">
    <![CDATA[
        update core_task set MID_ = :mId, MDATE_ = sysdate(), note = :note
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.task.update.record.complete.where.id">
    <![CDATA[
        update core_task set MID_ = :mId, MDATE_ = sysdate(), endDate = sysdate(), taskStatus = :taskStatus
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.task.delete.record.where.processId">
    <![CDATA[
        delete from core_task where processId = :processId
    ]]>
    </sql-query>
</hibernate-mapping>