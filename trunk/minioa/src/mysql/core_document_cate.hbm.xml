<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC 
      "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
      "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"> 
 
<hibernate-mapping auto-import="true" package="org.minioa.core">
    <sql-query name="core.document.cate.insert.record">
    <![CDATA[
        insert into core_document_cate(CID_,CDATE_,cateCode,cateName) values(:cId,:cDate,:cateCode,:cateName)
    ]]>
    </sql-query>
    <sql-query name="core.document.cate.select.records">
    <![CDATA[
        select ID_,CID_,CDATE_,MID_,MDATE_,
        	cateCode,cateName
        from core_document_cate order by cateCode limit :limit offset :offset
    ]]>
    </sql-query>
    <sql-query name="core.document.cate.select.records.all">
    <![CDATA[
        select ID_,CID_,CDATE_,MID_,MDATE_,
        	cateCode,cateName
        from core_document_cate order by cateCode
    ]]>
    </sql-query>
    <sql-query name="core.document.cate.select.records.count">
    <![CDATA[
        select count(*) as ds from core_document_cate
    ]]>
    </sql-query>
		<sql-query name="core.document.cate.select.record.where.id">
    <![CDATA[
        select ID_,CID_,CDATE_,MID_,MDATE_,
        	cateCode,cateName
        from core_document_cate
        where ID_ = :id
    ]]>
    </sql-query>

    <sql-query name="core.document.cate.update.record.where.id">
    <![CDATA[
        update core_document_cate set MID_ = :mId, MDATE_ = :mDate, 
        	cateCode = :cateCode, cateName = :cateName
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.document.cate.delete.record.where.id">
    <![CDATA[
        delete from core_document_cate where ID_ = :id
    ]]>
    </sql-query>
</hibernate-mapping>