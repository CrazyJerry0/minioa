<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
      "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
      "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="true" package="org.minioa.core">
    <sql-query name="core.process.insert.record">
    <![CDATA[
        insert into core_process(CID_,CDATE_,processDefId,instanceId,processDesc,startDate,processStatus,uuid,tableName) values(:cId,sysdate(),:processDefId,:instanceId,:processDesc,sysdate(),'running', :uuid, :tableName)
    ]]>
    </sql-query>
    <sql-query name="core.process.select.records">
    <![CDATA[
        select pro.ID_,pro.CID_,pro.CDATE_,pro.processDefId, pro.instanceId, pro.processDesc, pro.startDate, pro.endDate, pro.processStatus, pro.note, pro.uuid, pro.tableName
        from core_process pro
    ]]>
    </sql-query>
    <sql-query name="core.process.select.records.count">
    <![CDATA[
        select count(*) as result from core_process
    ]]>
    </sql-query>
    <sql-query name="core.process.select.record">
    <![CDATA[
        select pro.ID_,pro.CID_,pro.CDATE_,pro.processDefId, pro.instanceId, pro.processDesc, pro.startDate, pro.endDate, 
        	pro.processStatus, pro.note, pro.uuid, pro.tableName, u.displayName, def.formPath
        from core_process pro
        left join core_user u on u.ID_ = pro.CID_
        left join core_processdefinition def on def.ID_ = pro.processDefId
        where pro.processDefId = :processDefId and pro.instanceId = :instanceId and pro.tableName = :tableName
    ]]>
    </sql-query>
    <sql-query name="core.process.select.record.where.id">
    <![CDATA[
        select pro.ID_,pro.CID_,pro.CDATE_,pro.processDefId, pro.instanceId, pro.processDesc, pro.startDate, pro.endDate, 
        	pro.processStatus, pro.note, pro.uuid, pro.tableName, def.formPath
        from core_process pro
        left join core_processdefinition def on def.ID_ = pro.processDefId
        where pro.ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.process.select.record.where.uuid">
    <![CDATA[
        select pro.ID_,pro.CID_,pro.CDATE_,pro.processDefId, pro.instanceId, pro.processDesc, 
        	pro.startDate, pro.endDate, pro.processStatus, pro.note, pro.uuid, pro.tableName, def.formPath
        from core_process pro
        left join core_processdefinition def on def.ID_ = pro.processDefId
        where pro.uuid = :uuid
    ]]>
    </sql-query>
    <sql-query name="core.process.select.record.where.processDefId">
    <![CDATA[
        select pro.ID_,pro.CID_,pro.CDATE_,pro.processDefId, pro.instanceId, pro.processDesc, pro.startDate, pro.endDate, pro.processStatus, pro.note, pro.uuid, pro.tableName
        from core_process pro
        where pro.processDefId = :processDefId and  pro.instanceId = :instanceId and pro.tableName = :tableName
    ]]>
    </sql-query>
    <sql-query name="core.process.complete.where.id">
    <![CDATA[
        update core_process set MID_ = :mId, MDATE_ = sysdate(), endDate = sysdate(), processStatus = :processStatus
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.process.update.record.status.where.id">
    <![CDATA[
        update core_process set MID_ = :mId, MDATE_ = sysdate(), processStatus = :processStatus
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.process.update.record.note.where.id">
    <![CDATA[
        update core_process set MID_ = :mId, MDATE_ = sysdate(), note = :note
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.process.update.record.complete.where.id">
    <![CDATA[
        update core_process set MID_ = :mId, MDATE_ = sysdate(), endDate = sysdate(), processStatus = :processStatus
        where ID_ = :id
    ]]>
    </sql-query>
    <sql-query name="core.process.delete.record.where.id">
    <![CDATA[
        delete from core_process where ID_ = :id
    ]]>
    </sql-query>
</hibernate-mapping>